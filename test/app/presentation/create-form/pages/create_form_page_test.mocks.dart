// Mocks generated by Mockito 5.4.4 from annotations
// in formularios_front/test/app/presentation/create-form/pages/create_form_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:formularios_front/app/domain/entities/template_entity.dart'
    as _i4;
import 'package:formularios_front/app/domain/enum/priority_enum.dart' as _i6;
import 'package:formularios_front/app/presentation/create-form/states/template_state.dart'
    as _i2;
import 'package:formularios_front/app/presentation/create-form/stores/template_provider.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTemplateState_0 extends _i1.SmartFake implements _i2.TemplateState {
  _FakeTemplateState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TemplateProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTemplateProvider extends _i1.Mock implements _i3.TemplateProvider {
  MockTemplateProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TemplateState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTemplateState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.TemplateState);

  @override
  set state(_i2.TemplateState? _state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          _state,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          _isLoading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i4.TemplateEntity> get templates => (super.noSuchMethod(
        Invocation.getter(#templates),
        returnValue: <_i4.TemplateEntity>[],
      ) as List<_i4.TemplateEntity>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setIsLoading(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setIsLoading,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i2.TemplateState? value) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> fetchTemplates() => (super.noSuchMethod(
        Invocation.method(
          #fetchTemplates,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> createForm({
    required _i4.TemplateEntity? template,
    required String? area,
    required String? city,
    required String? street,
    required int? number,
    required double? latitude,
    required double? longitude,
    required String? region,
    required _i6.PriorityEnum? priority,
    required String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createForm,
          [],
          {
            #template: template,
            #area: area,
            #city: city,
            #street: street,
            #number: number,
            #latitude: latitude,
            #longitude: longitude,
            #region: region,
            #priority: priority,
            #description: description,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
